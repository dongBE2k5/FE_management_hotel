import React, { useState } from 'react';
import {
  View,
  Text,
  TextInput,
  FlatList,
  StyleSheet,
} from 'react-native';

export default function BookingList() {
  // State cho √¥ t√¨m ki·∫øm
  const [search, setSearch] = useState('');

  // D·ªØ li·ªáu demo (mock data)
  const data = [
    {
      id_booking: '1',
      name: 'Nguy·ªÖn VƒÉn A',
      phone: '0123 456 789',
      roomType: 'Ph√≤ng gia ƒë√¨nh',
      roomNumber: '123',
      checkIn: '28/01/2025',
      checkOut: '30/01/2025',
      nights: 2,
      guests: 5,
      price: '5.000.000',
      status: 'ƒê√£ thanh to√°n',
      checkinStatus: 'ƒê√£ Check-in',
    },
    {
      id_booking: '2',
      name: 'Nguy·ªÖn VƒÉn B',
      phone: '0987 654 321',
      roomType: 'Ph√≤ng ƒë∆°n',
      roomNumber: '456',
      checkIn: '28/01/2025',
      checkOut: '29/01/2025',
      nights: 1,
      guests: 1,
      price: '2.000.000',
      status: 'Ch∆∞a thanh to√°n',
    },
    {
      id_booking: '3',
      name: 'Nguy·ªÖn VƒÉn C',
      phone: '0909 888 777',
      roomType: 'Ph√≤ng ƒë√¥i',
      roomNumber: '789',
      checkIn: '28/01/2025',
      checkOut: '31/01/2025',
      nights: 3,
      guests: 2,
      price: '3.500.000',
      status: 'ƒê√£ thanh to√°n',
    },
     {
      id_booking: '4',
      name: 'Nguy·ªÖn VƒÉn D',
      phone: '0900 228 777',
      roomType: 'Ph√≤ng ƒë√¥i',
      roomNumber: '789',
      checkIn: '28/01/2025',
      checkOut: '31/01/2025',
      nights: 3,
      guests: 2,
      price: '3.500.000',
      status: 'ƒê√£ thanh to√°n',
    },
  ];

  // H√†m render t·ª´ng th·∫ª ƒë·∫∑t ph√≤ng
  const renderItem = ({ item }) => (
    <View style={styles.card}>
      {/* T√™n + SƒêT */}
            <Text style={styles.booking}>ID Booking: {item.id_booking}</Text>

      <Text style={styles.name}>{item.name}</Text>
      <Text style={styles.phone}>{item.phone}</Text>

      {/* Lo·∫°i ph√≤ng + s·ªë ph√≤ng */}
      <View style={styles.row}>
        <Text>üè® {item.roomType} - Ph√≤ng {item.roomNumber}</Text>
      </View>

      {/* Ng√†y check-in / check-out + s·ªë ƒë√™m */}
      <View style={styles.row}>
        <Text>üìÖ {item.checkIn} ‚Üí {item.checkOut}</Text>
        <Text>{item.nights} ƒë√™m</Text>
      </View>

      {/* S·ªë kh√°ch + Gi√° ti·ªÅn */}
      <View style={styles.row}>
        <Text>üë• {item.guests} kh√°ch</Text>
        <Text style={styles.price}>‚Ç´ {item.price}</Text>
      </View>

      {/* Ghi ch√∫ d·ªãch v·ª• k√®m theo */}
      <Text style={styles.note}>üõÅ T·∫Øm mi·ªÖn ph√≠, buffet bu·ªïi s√°ng</Text>

      {/* Tr·∫°ng th√°i thanh to√°n + check-in */}
      <View style={styles.statusRow}>
        <Text
          style={[
            styles.status,
            item.status === 'ƒê√£ thanh to√°n'
              ? styles.paid
              : styles.unpaid,
          ]}
        >
          {item.status}
        </Text>

        {/* Ch·ªâ hi·ªÉn th·ªã khi c√≥ checkinStatus */}
        {item.checkinStatus && (
          <Text style={[styles.status, styles.checkin]}>
            {item.checkinStatus}
          </Text>
        )}
      </View>
    </View>
  );

  return (
    <View style={styles.container}>
      {/* Ti√™u ƒë·ªÅ */}
      <Text style={styles.title}>Danh S√°ch ƒê·∫∑t Ph√≤ng</Text>

      {/* √î t√¨m ki·∫øm */}
      <TextInput
        style={styles.search}
        placeholder="T√¨m ki·∫øm theo ID, T√™n ho·∫∑c SƒêT"
        value={search}
        onChangeText={setSearch}
      />

      {/* Danh s√°ch cu·ªôn */}
      <FlatList
  data={data.filter(d => {
  const keyword = search.toLowerCase().trim();

  // N·∫øu search l√† s·ªë v√† ƒë·ªô d√†i <= 3 k√Ω t·ª± ‚Üí coi nh∆∞ t√¨m ID
  if (!isNaN(keyword) && keyword !== "" && keyword.length <= 3) {
    return String(d.id_booking) === keyword;
  }

  // C√≤n l·∫°i th√¨ t√¨m theo t√™n ho·∫∑c SƒêT
  return (
    d.name.toLowerCase().includes(keyword) ||
    d.phone.toLowerCase().includes(keyword)
  );
})}

  keyExtractor={item => String(item.id_booking)}
  renderItem={renderItem}
  showsVerticalScrollIndicator={false}
/>

    </View>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    padding: 16, // kho·∫£ng c√°ch l·ªÅ ngo√†i
    backgroundColor: '#fff',
  },
  title: {
    fontSize: 18,
    fontWeight: 'bold',
    marginBottom: 12,
  },
  search: {
    backgroundColor: '#f1f1f1',
    borderRadius: 8,
    paddingHorizontal: 12,
    paddingVertical: 8,
    marginBottom: 16,
  },
  card: {
    backgroundColor: '#fff',
    borderRadius: 12,
    borderWidth: 1,
    borderColor: '#ddd',
    padding: 12,
    marginBottom: 16,
  },
  booking:{
    fontWeight:"bold",
    fontSize:14,
      alignSelf: "flex-end",


  },
  name: {
    fontWeight: 'bold',
    fontSize: 16,
  },
  phone: {
    color: '#444',
    marginBottom: 6,
  },
  row: {
    flexDirection: 'row', // ngang h√†ng
    justifyContent: 'space-between', // 2 ƒë·∫ßu
    marginVertical: 2,
  },
  price: {
    fontWeight: 'bold',
  },
  note: {
    fontSize: 12,
    color: '#444',
    marginTop: 6,
  },
  statusRow: {
    flexDirection: 'row',
    marginTop: 8,
    gap: 8, // kho·∫£ng c√°ch gi·ªØa badge
  },
  status: {
    fontSize: 12,
    paddingHorizontal: 10,
    paddingVertical: 4,
    borderRadius: 20, // bo tr√≤n badge
    overflow: 'hidden',
  },
  paid: {
    backgroundColor: '#d4f5dd',
    color: '#1b7b34',
  },
  unpaid: {
    backgroundColor: '#e7e7e7',
    color: '#555',
  },
  checkin: {
    backgroundColor: '#d0f0ff',
    color: '#0077aa',
  },
});
