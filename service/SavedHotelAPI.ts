import BaseUrl from "../constants/BaseURL";
import { SavedHotel } from "../models/SavedHotel";
import { Hotel } from "../models/Hotel";


//  L·∫•y danh s√°ch kh√°ch s·∫°n ƒë√£ l∆∞u theo userId
export const getSavedHotels = async (userId: number): Promise<Hotel[]> => {
  try {
    const res = await fetch(`${BaseUrl}/saved-hotels/${userId}`);
    if (!res.ok) throw new Error(`HTTP error! status: ${res.status}`);
    const data: Hotel[] = await res.json();
    return data;
  } catch (err) {
    console.error("‚ùå Error fetching saved hotels:", err);
    return [];
  }
};
//  L∆∞u kh√°ch s·∫°n v√†o danh s√°ch y√™u th√≠ch
export const saveHotel = async (userId: number, hotelId: number): Promise<void> => {
  try {
    const res = await fetch(`${BaseUrl}/saved-hotels?userId=${userId}&hotelId=${hotelId}`, {
      method: "POST",
    });
    if (!res.ok) throw new Error(`HTTP error! status: ${res.status}`);
    console.log("‚úÖ ƒê√£ l∆∞u kh√°ch s·∫°n:", userId, hotelId);
  } catch (err) {
    console.error("‚ùå Error saving hotel:", err);
  }
};

//  Xo√° kh√°ch s·∫°n kh·ªèi danh s√°ch y√™u th√≠ch
export const removeSavedHotel = async (userId: number, hotelId: number): Promise<void> => {
  try {
    const res = await fetch(`${BaseUrl}/saved-hotels/${userId}/${hotelId}`, {
      method: "DELETE",
    });
    if (!res.ok) throw new Error(`HTTP error! status: ${res.status}`);
    console.log("üóëÔ∏è ƒê√£ xo√° kh√°ch s·∫°n ƒë√£ l∆∞u:", hotelId);
  } catch (err) {
    console.error("‚ùå Error removing saved hotel:", err);
  }
};

//  Ki·ªÉm tra 1 kh√°ch s·∫°n ƒë√£ ƒë∆∞·ª£c l∆∞u hay ch∆∞a
export const isHotelSaved = async (userId: number, hotelId: number): Promise<boolean> => {
  try {
    const res = await fetch(`${BaseUrl}/saved-hotels/check?userId=${userId}&hotelId=${hotelId}`);
    if (!res.ok) return false;
    const result = await res.json();
    return Boolean(result);
  } catch (err) {
    console.error("‚ùå Error checking saved hotel:", err);
    return false;
  }
};

//  L·ªçc kh√°ch s·∫°n ƒë√£ l∆∞u theo locationId
export const getSavedHotelsByLocation = async (
  userId: number,
  locationId: number
): Promise<Hotel[]> => {
  try {
    const res = await fetch(`${BaseUrl}/saved-hotels/${userId}/by-location/${locationId}`);
    if (!res.ok) throw new Error(`HTTP error! status: ${res.status}`);
    const data: Hotel[] = await res.json();
    return data;
  } catch (err) {
    console.error("‚ùå Error fetching saved hotels by location:", err);
    return [];
  }
};
